"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SalesOrderManagementModule;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const input_1 = require("../../components/ui/input");
const select_1 = require("../../components/ui/select");
const button_1 = require("../../components/ui/button");
const textarea_1 = require("../../components/ui/textarea");
const provinces = ['Select province/state', 'Metro Manila', 'Cebu', 'Davao'];
const cities = ['Select city/municipality', 'Quezon City', 'Cebu City', 'Davao City'];
const barangays = ['Select barangay', 'Barangay 1', 'Barangay 2'];
const propertyTypes = ['Residential - House', 'Residential - Condo', 'Commercial'];
const roomUses = ['Bedroom', 'Living Room', 'Office'];
const insulationLevels = ['Average', 'Poor', 'Good'];
const sunExposures = ['Low', 'Medium', 'High'];
const supplyVoltages = ['220-240V', '110V'];
const unitTypes = ['Undecided', 'Window', 'Split', 'Central'];
function SalesOrderManagementModule() {
    const [form, setForm] = (0, react_1.useState)({
        firstName: '', lastName: '', email: '', phone: '',
        street: '', province: '', city: '', barangay: '', postal: '',
        propertyType: '', roomUse: '', roomLength: '', roomWidth: '', ceilingHeight: '',
        sunExposure: '', insulation: '', occupants: '', windows: [],
        supplyVoltage: '', breaker: '', unitType: '', budget: '', notes: '',
        preferredDate: '', preferredTime: '', attachments: null,
    });
    const handleChange = (e) => {
        const { name, value, files } = e.target;
        setForm(f => (Object.assign(Object.assign({}, f), { [name]: files ? files : value })));
    };
    return ((0, jsx_runtime_1.jsxs)("form", { className: "space-y-6 p-6 bg-white rounded shadow", children: [(0, jsx_runtime_1.jsx)("h1", { className: "text-3xl font-bold text-center", children: "Sales Order - Client Profiling" }), (0, jsx_runtime_1.jsx)("p", { className: "text-center mb-4", children: "Fill out the details below to help us assess your sales order needs." }), (0, jsx_runtime_1.jsxs)("section", { className: "border rounded p-4", children: [(0, jsx_runtime_1.jsx)("h2", { className: "font-bold mb-2", children: "1) Client Information" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4", children: [(0, jsx_runtime_1.jsx)(input_1.Input, { label: "First Name *", name: "firstName", value: form.firstName, onChange: handleChange, required: true }), (0, jsx_runtime_1.jsx)(input_1.Input, { label: "Last Name *", name: "lastName", value: form.lastName, onChange: handleChange, required: true })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4 mt-2", children: [(0, jsx_runtime_1.jsx)(input_1.Input, { label: "Email", name: "email", value: form.email, onChange: handleChange, type: "email" }), (0, jsx_runtime_1.jsx)(input_1.Input, { label: "Phone *", name: "phone", value: form.phone, onChange: handleChange, required: true })] })] }), (0, jsx_runtime_1.jsxs)("section", { className: "border rounded p-4", children: [(0, jsx_runtime_1.jsx)("h2", { className: "font-bold mb-2", children: "2) Installation Address" }), (0, jsx_runtime_1.jsx)(input_1.Input, { label: "Street Address *", name: "street", value: form.street, onChange: handleChange, required: true }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4 mt-2", children: [(0, jsx_runtime_1.jsx)(select_1.Select, { label: "Province/State", name: "province", value: form.province, onChange: handleChange, options: provinces }), (0, jsx_runtime_1.jsx)(select_1.Select, { label: "City/Municipality *", name: "city", value: form.city, onChange: handleChange, options: cities, required: true })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4 mt-2", children: [(0, jsx_runtime_1.jsx)(select_1.Select, { label: "Barangay *", name: "barangay", value: form.barangay, onChange: handleChange, options: barangays, required: true }), (0, jsx_runtime_1.jsx)(input_1.Input, { label: "Postal Code", name: "postal", value: form.postal, onChange: handleChange })] })] }), (0, jsx_runtime_1.jsxs)("section", { className: "border rounded p-4", children: [(0, jsx_runtime_1.jsx)("h2", { className: "font-bold mb-2", children: "3) Property & Room Details" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4", children: [(0, jsx_runtime_1.jsx)(select_1.Select, { label: "Property Type", name: "propertyType", value: form.propertyType, onChange: handleChange, options: propertyTypes }), (0, jsx_runtime_1.jsx)(select_1.Select, { label: "Room Use", name: "roomUse", value: form.roomUse, onChange: handleChange, options: roomUses })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4 mt-2", children: [(0, jsx_runtime_1.jsx)(input_1.Input, { label: "Room Length (m) *", name: "roomLength", value: form.roomLength, onChange: handleChange, required: true, type: "number" }), (0, jsx_runtime_1.jsx)(input_1.Input, { label: "Room Width (m) *", name: "roomWidth", value: form.roomWidth, onChange: handleChange, required: true, type: "number" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4 mt-2", children: [(0, jsx_runtime_1.jsx)(input_1.Input, { label: "Ceiling Height (m) *", name: "ceilingHeight", value: form.ceilingHeight, onChange: handleChange, required: true, type: "number" }), (0, jsx_runtime_1.jsx)(select_1.Select, { label: "Sun Exposure", name: "sunExposure", value: form.sunExposure, onChange: handleChange, options: sunExposures })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4 mt-2", children: [(0, jsx_runtime_1.jsx)(select_1.Select, { label: "Insulation", name: "insulation", value: form.insulation, onChange: handleChange, options: insulationLevels }), (0, jsx_runtime_1.jsx)(input_1.Input, { label: "Typical Occupants", name: "occupants", value: form.occupants, onChange: handleChange, type: "number" })] }), (0, jsx_runtime_1.jsx)("div", { className: "mt-2", children: (0, jsx_runtime_1.jsx)(button_1.Button, { type: "button", children: "+ Add Window" }) }), (0, jsx_runtime_1.jsxs)("div", { className: "mt-2 text-sm", children: ["Estimated Room Space: ", (0, jsx_runtime_1.jsx)("b", { children: "0.0 m\u00B3" }), (0, jsx_runtime_1.jsx)("br", {}), "Estimated cooling capacity: ", (0, jsx_runtime_1.jsx)("b", { children: "0.00 HP" })] })] }), (0, jsx_runtime_1.jsxs)("section", { className: "border rounded p-4", children: [(0, jsx_runtime_1.jsx)("h2", { className: "font-bold mb-2", children: "4) Electrical & Preferences" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4", children: [(0, jsx_runtime_1.jsx)(select_1.Select, { label: "Supply Voltage", name: "supplyVoltage", value: form.supplyVoltage, onChange: handleChange, options: supplyVoltages }), (0, jsx_runtime_1.jsx)(input_1.Input, { label: "Available Breaker (A)", name: "breaker", value: form.breaker, onChange: handleChange, type: "number" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4 mt-2", children: [(0, jsx_runtime_1.jsx)(select_1.Select, { label: "Preferred Unit Type", name: "unitType", value: form.unitType, onChange: handleChange, options: unitTypes }), (0, jsx_runtime_1.jsx)(input_1.Input, { label: "Budget (\u20B1)", name: "budget", value: form.budget, onChange: handleChange, type: "number" })] }), (0, jsx_runtime_1.jsx)(textarea_1.Textarea, { label: "Notes", name: "notes", value: form.notes, onChange: handleChange })] }), (0, jsx_runtime_1.jsxs)("section", { className: "border rounded p-4", children: [(0, jsx_runtime_1.jsx)("h2", { className: "font-bold mb-2", children: "5) Preferred Schedule" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-4", children: [(0, jsx_runtime_1.jsx)(input_1.Input, { label: "Preferred Date", name: "preferredDate", value: form.preferredDate, onChange: handleChange, type: "date" }), (0, jsx_runtime_1.jsx)(input_1.Input, { label: "Preferred Time", name: "preferredTime", value: form.preferredTime, onChange: handleChange, type: "time" })] })] }), (0, jsx_runtime_1.jsxs)("section", { className: "border rounded p-4", children: [(0, jsx_runtime_1.jsx)("h2", { className: "font-bold mb-2", children: "6) Attachments (optional)" }), (0, jsx_runtime_1.jsx)("label", { children: "Photos of Room/Window/Outdoor Area" }), (0, jsx_runtime_1.jsx)("input", { type: "file", name: "attachments", multiple: true, onChange: handleChange, className: "mt-2" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex gap-2 mt-4", children: [(0, jsx_runtime_1.jsx)(button_1.Button, { type: "button", children: "Save Draft" }), (0, jsx_runtime_1.jsx)(button_1.Button, { type: "button", children: "Export JSON" }), (0, jsx_runtime_1.jsx)(button_1.Button, { type: "button", children: "Print" }), (0, jsx_runtime_1.jsx)(button_1.Button, { type: "submit", variant: "primary", children: "Submit" })] })] }));
}
